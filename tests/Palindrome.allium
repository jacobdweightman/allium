type Symbol {
    ctor A;
    ctor B;
}

type SymbolList {
    ctor Nil;
    ctor Cons(Symbol, SymbolList);
}

pred main {
    main <- palindrome(Cons(A, Cons(B, Cons(B, Cons(A, Nil)))));
}

pred palindrome(SymbolList) {
    palindrome(let x) <- reverse(x, x);
}

pred reverse(SymbolList, SymbolList) {
    reverse(let x, let y) <- reverseHelper(x, y, Nil);
}

pred reverseHelper(SymbolList, SymbolList, SymbolList) {
    reverseHelper(Nil, let y, y) <- true;
    reverseHelper(Cons(let head, let tail), let y, let z) <-
        reverseHelper(tail, y, Cons(head, z));
}
