type IceCreamFlavor {
    ctor Chocolate;
    ctor Vanilla;
    ctor Strawberry;
}

pred eqIceCreamFlavor(IceCreamFlavor, IceCreamFlavor) {
    eqIceCreamFlavor(Chocolate, Chocolate) <- true;
    eqIceCreamFlavor(Vanilla, Vanilla) <- true;
    eqIceCreamFlavor(Strawberry, Strawberry) <- true;
}

type Sauce {
    ctor Fudge;
    ctor Caramel;
    ctor Raspberry;
}

pred eqSauce(Sauce, Sauce) {
    eqSauce(Fudge, Fudge) <- true;
    eqSauce(Caramel, Caramel) <- true;
    eqSauce(Raspberry, Raspberry) <- true;
}

type Sundae {
    ctor Sundae(IceCreamFlavor, Sauce);
}

pred eqSundae(Sundae, Sundae) {
    eqSundae(Sundae(let flavor1, let sauce1), Sundae(let flavor2, let sauce2)) <-
        eqIceCreamFlavor(flavor1, flavor2),
        eqSauce(sauce1, sauce2);
}

pred containsChocolate(Sundae) {
    containsChocolate(Sundae(Chocolate, _)) <- true;
    containsChocolate(Sundae(_, Fudge)) <- true;
}

pred main {
    main <-
        containsChocolate(Sundae(let iceCream, let sauce));
}
