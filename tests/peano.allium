type Nat {
    ctor zero;
    ctor s(Nat);
}

pred even(Nat) {
    even(zero) <- true;
    even(s(s(let x))) <- even(x);
}

pred add(Nat, Nat, Nat) {
    add(let x, zero, x) <- true;
    add(let x, s(let y), s(let z)) <- add(x, y, z);
}

pred mul(Nat, Nat, Nat) {
    mul(_, zero, zero) <- true;
    mul(let x, s(let y), let z) <- mul(x, y, let w), add(w, x, z);
}

pred main {
    main <- even(s(s(s(s(s(s(zero))))))),
        add(s(s(zero)), s(s(s(zero))), s(s(s(s(s(zero)))))),
        mul(s(s(zero)), s(s(s(zero))), s(s(s(s(s(s(zero)))))));
}
