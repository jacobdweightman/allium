name: Build
runs:
  using: "composite"
  steps:
  # The Linux runners default to GCC 9, which doesn't support coroutines. They
  # also have GCC 11, which has a bug which breaks recursive coroutines. For
  # now, we use Clang on Linux.
  # TODO: support building with GCC once it supports coroutines.
  - name: Install general compiler
    shell: bash
    run: |
      wget https://apt.llvm.org/llvm.sh
      chmod +x llvm.sh
      sudo ./llvm.sh 12
      sudo apt-get install libc++-12-dev libc++abi-12-dev libunwind-dev
      clang++-12 --version
      echo "CXX=clang++-12" >> $GITHUB_ENV
    if: runner.os == 'Linux'

  - name: Add FileCheck to path (Windows)
    shell: bash
    run: echo "./bin" >> $GITHUB_PATH
    if: runner.os == 'Windows'

  - name: Create Build Environment
    shell: bash
    run: cmake -E make_directory ./build

  - name: Configure CMake
    # Use a bash shell so we can use the same syntax for environment variable
    # access regardless of the host operating system
    shell: bash
    working-directory: ./build
    run: cmake .. -DCMAKE_BUILD_TYPE=$BUILD_TYPE

  # Build targets that should be shipped as part of a release. Specifically,
  # do not build test-only targets here.
  - name: Build Targets
    shell: bash
    working-directory: ./build
    run: cmake --build . --config $BUILD_TYPE --target allium allium-ls
